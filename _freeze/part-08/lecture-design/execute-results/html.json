{
  "hash": "da47476acfec8513c687954116359524",
  "result": {
    "engine": "julia",
    "markdown": "---\ntitle: \"Lecture VIII - Energy System Design Problem\"\nsubtitle: \"Energy System Optimization with Julia\"\nauthor: \"Dr. Tobias Cors\"\ninstitute: \"Hamburg University of Applied Science - Summer 2025\"\ntitle-slide-attributes:\n    data-background-color: \"#025259\"\nhtml-math-method:\n  method: mathjax\n  url: \"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"\n\nformat:\n    html:\n        theme: [litera, ../styles.scss]\n        include-in-header: \n            text: |\n                \\usepackage{tikz}\n                \\usepackage{pgfplots}\n                \\pgfplotsset{compat=1.18}\n    revealjs:\n        theme: [default, ../styles.scss]\n        transition: slide\n        transition-speed: fast\n        highlight-style: arrow\n        slide-number: true\n        code-copy: true\n        code-link: true\n        preview-links: auto\n        footer: \" {{< meta title >}} | {{< meta author >}} | [Home](lecture-design.qmd)\"\n        output-file: lecture-presentation.html\n\nbibliography: ../ESO-bib.bib\n\nengine: julia\n\nexecute:\n    echo: true\n---\n\n\n\n\n\n\n\n\n# [Quick Recap from last Week]{.flow} {.title}\n\n## Unit Commitment Problem with Storage Overview\n\n- **Objective**: Minimize total generation and storage costs over multiple time periods\n- **Decision Variables**:\n\n  - Power output of thermal generators ($p_{g,t}$)\n  - Power output of wind turbines ($p_{w,t}$)\n  - Binary variables for generator status ($u_{g,t}$)\n  - Binary variables for startup events ($v_{g,t}$)\n  - Storage energy level ($e_{s,t}$)\n  - Storage charging power ($p^{ch}_{s,t}$)\n  - Storage discharging power ($p^{dis}_{s,t}$)\n  - Binary variables for storage charging status ($u^{ch}_{s,t}$)\n  - Binary variables for storage discharging status ($u^{dis}_{s,t}$)\n\n- **Key Constraints**:\n\n  - Power balance (including storage)\n  - Generator limits\n  - Wind limits\n  - Minimum up/down times\n  - Ramp rate limits\n  - Startup variable definition\n  - Storage energy balance\n  - Storage energy limits\n  - Storage power limits and mutual exclusion\n  - Storage ramp rate limits\n\n::: {.callout-note}\nThe Unit Commitment problem with storage extends the basic UC problem by adding storage system modeling and operation constraints.\n:::\n\n## Mathematical Formulation\n\n### Objective Function\n\n$\\text{Minimize} \\quad \\sum_{t \\in \\mathcal{T}} \\left( \\sum_{g \\in \\mathcal{G}} (c^{var}_g p_{g,t} + c^{fix}_g u_{g,t} + c^{start}_g v_{g,t}) + \\sum_{w \\in \\mathcal{W}} c^{var}_w p_{w,t} \\right)$\n\n### Key Constraints\n\n1. **Power Balance**:\n\n$\\sum_{g \\in \\mathcal{G}} p_{g,t} + \\sum_{w \\in \\mathcal{W}} p_{w,t} + \\sum_{s \\in \\mathcal{S}} (p^{dis}_{s,t} - p^{ch}_{s,t}) = d^f_t \\quad \\forall t \\in \\mathcal{T}$\n\n2. **Generator Limits**:\n\n$p^{\\min}_g u_{g,t} \\leq p_{g,t} \\leq p^{\\max}_g u_{g,t} \\quad \\forall g \\in \\mathcal{G}, t \\in \\mathcal{T}$\n\n3. **Wind Power**:\n\n$0 \\leq p_{w,t} \\leq p^f_{w,t} \\quad \\forall w \\in \\mathcal{W}, t \\in \\mathcal{T}$\n\n4. **Storage Energy Balance**:\n\n$e_{s,t} = (1-sdr_s)e_{s,t-1} + \\eta^{ch}_s p^{ch}_{s,t} - \\frac{p^{dis}_{s,t}}{\\eta^{dis}_s} \\quad \\forall s \\in \\mathcal{S}, t \\in \\mathcal{T}$\n\n5. **Storage Energy Limits**:\n\n$E^{min}_s \\leq e_{s,t} \\leq E^{max}_s \\quad \\forall s \\in \\mathcal{S}, t \\in \\mathcal{T}$\n\n6. **Storage Power Limits and Mutual Exclusion**:\n\n$0 \\leq p^{ch}_{s,t} \\leq P^{ch,max}_s u^{ch}_{s,t} \\quad \\forall s \\in \\mathcal{S}, t \\in \\mathcal{T}$\n$0 \\leq p^{dis}_{s,t} \\leq P^{dis,max}_s u^{dis}_{s,t} \\quad \\forall s \\in \\mathcal{S}, t \\in \\mathcal{T}$\n$u^{ch}_{s,t} + u^{dis}_{s,t} \\leq 1 \\quad \\forall s \\in \\mathcal{S}, t \\in \\mathcal{T}$\n\n7. **Storage Ramp Rate Limits**:\n\n$p^{ch}_{s,t} - p^{ch}_{s,t-1} \\leq R^{ch}_s \\quad \\forall s \\in \\mathcal{S}, t \\in \\mathcal{T}$\n$p^{dis}_{s,t} - p^{dis}_{s,t-1} \\leq R^{dis}_s \\quad \\forall s \\in \\mathcal{S}, t \\in \\mathcal{T}$\n\n## Model Characteristics\n\n- Mixed-Integer Linear Programming (MILP) problem\n- Binary variables for generator status, startup events, and storage operation\n- Time-dependent decisions for both generation and storage\n- Computationally challenging due to:\n  - Large number of binary variables\n  - Large number of time steps\n  - Large number of constraints\n\n::: {.callout-tip}\nThe Unit Commitment problem with storage provides a comprehensive model for power system operation, including both generation and storage resources.\n:::\n\n## Implementation Insights\n\n- Data structures use NamedTuples for efficient parameter storage\n- Results are stored in DataFrames for easy analysis\n- Key metrics tracked:\n  - Total system cost\n  - Wind curtailment\n  - Thermal and wind generation\n  - Generator status and startup events\n  - Storage energy levels\n  - Storage charging/discharging power\n\n::: {.callout-note}\nThe tutorial demonstrated how to implement and solve the UC problem with storage using Julia and JuMP, including visualization of generation and storage operation over time.\n:::\n\n## Solutions from last Week\n\n- The tutorials from last week will again be [available on Friday]{.highlight}\n- You can access them in the project folder on Github\n- Click on the little cat icon on the bottom right\n\n. . .\n\n::: {.callout-tip}\n[You can ask questions anytime in class or via email!]{.highlight}\n:::\n\n# [Excursion: Tight and Compact Formulations]{.flow} {.title}\n\n## What are Tight and Compact Formulations?\n\nIn mathematical optimization, particularly for Mixed-Integer Linear Programming (MILP) problems like the Unit Commitment problem, the concepts of \"tight\" and \"compact\" formulations are crucial for efficient problem solving.\n\n### Tight Formulations\n\nA formulation is considered \"tight\" when there is a small gap between the optimal solution of the linear programming (LP) relaxation and the integer solution. This is important because:\n\n- It helps solvers find optimal solutions faster\n- It provides better lower bounds for branch-and-bound algorithms\n- It reduces the search space for integer solutions\n\n### Compact Formulations\n\nA formulation is considered \"compact\" when it uses fewer variables and constraints while maintaining accuracy. This is important because:\n\n- It reduces computational complexity\n- It decreases memory requirements\n- It can speed up solution times\n- It makes the model easier to understand and maintain\n\n## Examples in UC with Storage\n\n### 1. Tight Formulations\n\n#### Example 1 - Generator Commitment:\n```math\n# Less tight formulation\np_{g,t} ≤ P^{max}_g u_{g,t}  # Only upper bound\n\n# Tighter formulation\nP^{min}_g u_{g,t} ≤ p_{g,t} ≤ P^{max}_g u_{g,t}  # Both bounds\n```\n- The second formulation is tighter because it includes both minimum and maximum power constraints\n- This reduces the feasible region of the LP relaxation\n- Makes it easier for the solver to find integer solutions\n\n#### Example 2 - Storage Operation:\n```math\n# Less tight formulation\ne_{s,t} = e_{s,t-1} + p^{ch}_{s,t} - p^{dis}_{s,t}  # Without efficiency\n\n# Tighter formulation\ne_{s,t} = (1-sdr_s)e_{s,t-1} + η^{ch}_s p^{ch}_{s,t} - p^{dis}_{s,t}/η^{dis}_s  # With efficiency\n```\n- The second formulation is tighter because it accounts for efficiency losses\n- This better represents the physical reality of storage operation\n- Helps the solver find more realistic solutions\n\n### 2. Compact Formulations\n\n#### Example 1 - Minimum Up/Down Times:\n```math\n# Less compact formulation\nu_{g,t} - u_{g,t-1} ≤ u_{g,τ}  ∀τ ∈ [t+1, t+T^{up}_g-1]\nu_{g,t-1} - u_{g,t} ≤ 1 - u_{g,τ}  ∀τ ∈ [t+1, t+T^{down}_g-1]\n\n# More compact formulation\n∑_{τ=t}^{t+T^{up}_g-1} u_{g,τ} ≥ T^{up}_g (u_{g,t} - u_{g,t-1})\n∑_{τ=t}^{t+T^{down}_g-1} (1-u_{g,τ}) ≥ T^{down}_g (u_{g,t-1} - u_{g,t})\n```\n- The second formulation uses fewer constraints\n- Achieves the same result with less computational overhead\n- Makes the model more efficient to solve\n\n#### Example 2 - Storage Mutual Exclusion:\n```math\n# Less compact formulation\np^{ch}_{s,t} ≤ P^{ch,max}_s u^{ch}_{s,t}\np^{dis}_{s,t} ≤ P^{dis,max}_s u^{dis}_{s,t}\nu^{ch}_{s,t} + u^{dis}_{s,t} ≤ 1\n\n# More compact formulation\np^{ch}_{s,t}/P^{ch,max}_s + p^{dis}_{s,t}/P^{dis,max}_s ≤ 1\n```\n- The second formulation combines three constraints into one\n- Reduces the number of binary variables needed\n- Simplifies the model while maintaining accuracy\n\n## Why These Concepts Matter\n\n### Computational Efficiency\n- Tighter formulations reduce the search space\n- Compact formulations reduce the problem size\n- Both lead to faster solution times\n\n### Solution Quality\n- Tighter formulations provide better bounds\n- Help find optimal solutions more reliably\n- Reduce the gap between LP relaxation and integer solution\n\n### Practical Implementation\n- More efficient use of computational resources\n- Better handling of large-scale problems\n- More reliable results for real-world applications\n\n## Trade-offs to Consider\n\n### Tightness vs. Compactness\n- Sometimes making a formulation tighter makes it less compact\n- Need to balance between tightness and problem size\n- Choose based on specific problem characteristics\n\n### Model Complexity\n- More complex formulations might be tighter but harder to understand\n- Simpler formulations might be more compact but less accurate\n- Need to find the right balance for your specific use case\n\n::: {.callout-note}\nThese concepts are particularly important in the Unit Commitment problem with storage and approximations of part-load efficiencies because:\n\n1. The problem is already complex with many variables and constraints\n2. Storage adds additional complexity with its operational constraints\n3. Real-world applications need efficient solutions\n4. The problem size can grow quickly with more time periods or storage units\n:::\n\n# [Introduction]{.flow} {.title}\n\n## Energy System Design Problem\n\nIn this lecture, we extend the Unit Commitment problem to include investment decisions for energy system components. This allows us to:\n\n1. Optimize technology selection\n2. Determine optimal component sizes\n3. Balance investment and operational costs\n4. Plan local energy systems holistically\n\n::: {.callout-note}\nThe design problem combines investment planning (sizing) with operational optimization, enabling comprehensive energy system design.\n:::\n\n## Key Components\n\nWe will focus on optimizing:\n\n- Storage systems\n- Wind parks\n- PV parks\n- Electric market participation\n\n... while fullfilling a fixed electric demand. Additionally, we consider a maximum investment budget.\n\nAll nominal sizes will be decision variables in our optimization model.\n\n# [Mathematical Formulation of the Deterministic Design Problem]{.flow} {.title}\n\n## Sets\n\n- $\\mathcal{T}$ - Set of time periods indexed by $t \\in \\{1,2,...,|\\mathcal{T}|\\}$\n- $\\mathcal{S}$ - Set of storage systems indexed by $s \\in \\{1,2,...,|\\mathcal{S}|\\}$\n- $\\mathcal{W}$ - Set of wind parks indexed by $w \\in \\{1,2,...,|\\mathcal{W}|\\}$\n- $\\mathcal{V}$ - Set of PV parks indexed by $v \\in \\{1,2,...,|\\mathcal{V}|\\}$\n\n## Decision Variables\n\n### Investment Variables\n- $e^{nom}_s$ - Nominal energy capacity of storage $s$ [MWh]\n- $p^{ch,nom}_s$ - Nominal charging power of storage $s$ [MW]\n- $p^{dis,nom}_s$ - Nominal discharging power of storage $s$ [MW]\n- $p^{nom}_w$ - Nominal power of wind park $w$ [MW]\n- $p^{nom}_v$ - Nominal power of PV park $v$ [MW]\n\n### Operational Variables\n- $p_{w,t}$ - Power output of wind park $w$ at time $t$ [MW]\n- $p_{v,t}$ - Power output of PV park $v$ at time $t$ [MW]\n- $p^{in}_t$ - Power inflow through market at time $t$ [MW]\n- $p^{out}_t$ - Power outflow through market at time $t$ [MW]\n- $p^{ch}_{s,t}$ - Charging power of storage $s$ at time $t$ [MW]\n- $p^{dis}_{s,t}$ - Discharging power of storage $s$ at time $t$ [MW]\n- $e_{s,t}$ - Energy level of storage $s$ at time $t$ [MWh]\n\n### Annual Cost Variables\n- $AC^{inv}_s$ - Annual investment cost for storage $s$ [EUR/year]\n- $AC^{inv}_w$ - Annual investment cost for wind park $w$ [EUR/year]\n- $AC^{inv}_v$ - Annual investment cost for PV park $v$ [EUR/year]\n- $AC^{grid,imp}$ - Annual grid electricity import cost [EUR/year]\n- $AR^{grid,exp}$ - Annual grid electricity export revenue [EUR/year]\n\n## Parameters\n\n### Investment Costs\n- $C^{E}_s$ - Cost per MWh of energy capacity for storage $s$ [EUR/MWh]\n- $C^{P,ch}_s$ - Cost per MW of charging power capacity for storage $s$ [EUR/MW]\n- $C^{P,dis}_s$ - Cost per MW of discharging power capacity for storage $s$ [EUR/MW]\n- $C^{W}_w$ - Cost per MW of wind park $w$ [EUR/MW]\n- $C^{PV}_v$ - Cost per MW of PV park $v$ [EUR/MW]\n- $F^{PVAF}$ - Present value annuity factor for investment costs\n- $B^{max}$ - Maximum investment budget [EUR]\n\n### Operational Parameters\n- $\\eta^{ch}_s$ - Charging efficiency of storage $s$\n- $\\eta^{dis}_s$ - Discharging efficiency of storage $s$\n- $sdr_s$ - Self-discharge rate of storage $s$ per time step\n- $DoD_s$ - Depth of discharge limit for storage $s$ [%]\n- $f_{w,t}$ - Wind capacity factor at time $t$ for wind park $w$\n- $f_{v,t}$ - Solar capacity factor at time $t$ for PV park $v$\n- $d_t$ - Electric demand at time $t$ [MW]\n- $c^{MP}_t$ - Grid electricity market price at time $t$ [EUR/MWh]\n- $c^{TaL}$ - Grid electricity taxes and levies (including Netzentgelt) [EUR/MWh]\n\n## Present Value Annuity Factor (PVAF)\n\nThe Present Value Annuity Factor (PVAF) is used to convert investment costs into equivalent annual costs. It is calculated as:\n\n$F^{PVAF} = \\frac{(1 + r)^n - 1}{r(1 + r)^n}$\n\nwhere:\n- $r$ is the discount rate (e.g., 0.05 for 5%)\n- $n$ is the component lifetime in years (we assume the same lifetime for all components in the following)\n\nThis factor allows us to:\n\n1. Convert one-time investment costs into equivalent annual costs\n2. Account for the time value of money\n3. Compare investments with different lifetimes\n4. Make investment decisions based on annual costs\n\n## Objective Function\n\n$\\text{Minimize} \\quad \\sum_{s \\in \\mathcal{S}} AC^{inv}_s + \\sum_{w \\in \\mathcal{W}} AC^{inv}_w + \\sum_{v \\in \\mathcal{V}} AC^{inv}_v + AC^{grid,imp} - AR^{grid,exp}$\n\n::: {.callout-note}\nThe objective function minimizes the total annual costs of the energy system:\n\n1. Investment costs for all components:\n\n   - Storage systems (energy and power capacity)\n   - Wind parks\n   - PV parks\n\n2. Grid electricity costs/revenues:\n\n   - Import costs (market price + taxes/levies including Netzentgelt)\n   - Export revenue (market price only)\n:::\n\n## Annual Cost Constraints\n\n### Investment Costs\n$AC^{inv}_s = \\frac{C^{E}_s}{F^{PVAF}} e^{nom}_s + \\frac{C^{P,ch}_s}{F^{PVAF}} p^{ch,nom}_s + \\frac{C^{P,dis}_s}{F^{PVAF}} p^{dis,nom}_s \\quad \\forall s \\in \\mathcal{S}$\n$AC^{inv}_w = \\frac{C^{W}_w}{F^{PVAF}} p^{nom}_w \\quad \\forall w \\in \\mathcal{W}$\n$AC^{inv}_v = \\frac{C^{PV}_v}{F^{PVAF}} p^{nom}_v \\quad \\forall v \\in \\mathcal{V}$\n\n::: {.callout-note}\nThe investment costs are annualized using the Present Value Annuity Factor (PVAF):\n\n1. Storage investment includes:\n\n   - Energy capacity costs\n   - Charging power capacity costs\n   - Discharging power capacity costs\n\n2. Wind and PV investment include:\n\n   - Power capacity costs only\n:::\n\n### Investment Budget\n$\\sum_{s \\in \\mathcal{S}} (C^{E}_s e^{nom}_s + C^{P,ch}_s p^{ch,nom}_s + C^{P,dis}_s p^{dis,nom}_s) + \\sum_{w \\in \\mathcal{W}} C^{W}_w p^{nom}_w + \\sum_{v \\in \\mathcal{V}} C^{PV}_v p^{nom}_v \\leq B^{max}$\n\n::: {.callout-note}\nThe investment budget constraint ensures that:\n\n1. Total investment costs do not exceed the maximum budget\n\n2. Includes all component investments:\n\n   - Storage systems (energy and power capacity)\n   - Wind parks\n   - PV parks\n:::\n\n### Grid Electricity Costs\n$AC^{grid,imp} = \\sum_{t \\in \\mathcal{T}} (c^{MP}_t + c^{TaL}) p^{in}_t$\n$AR^{grid,exp} = \\sum_{t \\in \\mathcal{T}} c^{MP}_t p^{out}_t$\n\n::: {.callout-note}\nThe grid electricity costs and revenues are calculated as:\n\n1. Import costs include:\n\n   - Time-dependent market price\n   - Fixed taxes and levies (including Netzentgelt)\n\n2. Export revenue includes:\n\n   - Time-dependent market price only\n:::\n\n## Constraints\n\n### Power Balance\n$\\sum_{w \\in \\mathcal{W}} p_{w,t} + \\sum_{v \\in \\mathcal{V}} p_{v,t} + (p^{in}_t - p^{out}_t) + \\sum_{s \\in \\mathcal{S}} (p^{dis}_{s,t} - p^{ch}_{s,t}) = d_t \\quad \\forall t \\in \\mathcal{T}$\n\n::: {.callout-note}\nThe power balance ensures that at each time step:\n\n1. Total generation equals total demand:\n\n   - Wind generation\n   - PV generation\n   - Grid import/export\n   - Storage charging/discharging\n\n2. Net grid power flow is:\n\n   - Positive for import\n   - Negative for export\n:::\n\n### Component Limits\n\n#### Wind Parks\n$0 \\leq p_{w,t} \\leq f_{w,t} p^{nom}_w \\quad \\forall w \\in \\mathcal{W}, t \\in \\mathcal{T}$\n\n::: {.callout-note}\nWind power output is constrained by:\n\n1. Non-negativity (no negative generation)\n2. Maximum available power:\n\n   - Time-dependent capacity factor\n   - Nominal power capacity\n:::\n\n#### PV Parks\n$0 \\leq p_{v,t} \\leq f_{v,t} p^{nom}_v \\quad \\forall v \\in \\mathcal{V}, t \\in \\mathcal{T}$\n\n::: {.callout-note}\nPV power output is constrained by:\n\n1. Non-negativity (no negative generation)\n\n2. Maximum available power:\n\n   - Time-dependent capacity factor\n   - Nominal power capacity\n:::\n\n#### Storage Systems\n$0 \\leq p^{ch}_{s,t} \\leq p^{ch,nom}_s \\quad \\forall s \\in \\mathcal{S}, t \\in \\mathcal{T}$\n$0 \\leq p^{dis}_{s,t} \\leq p^{dis,nom}_s \\quad \\forall s \\in \\mathcal{S}, t \\in \\mathcal{T}$\n$DoD_s e^{nom}_s \\leq e_{s,t} \\leq e^{nom}_s \\quad \\forall s \\in \\mathcal{S}, t \\in \\mathcal{T}$\n\n::: {.callout-note}\nStorage operation is constrained by:\n\n1. Charging power limits:\n\n   - Non-negativity\n   - Nominal charging power capacity\n\n2. Discharging power limits:\n\n   - Non-negativity\n   - Nominal discharging power capacity\n\n3. Energy level limits:\n\n   - Minimum level based on depth of discharge\n   - Maximum level based on nominal capacity\n:::\n\n### Storage Energy Balance\n$e_{s,t} = (1-sdr_s)e_{s,t-1} + \\eta^{ch}_s p^{ch}_{s,t} - \\frac{p^{dis}_{s,t}}{\\eta^{dis}_s} \\quad \\forall s \\in \\mathcal{S}, t \\in \\mathcal{T}$\n\n::: {.callout-note}\nThe storage energy balance accounts for:\n\n1. Previous energy level:\n\n   - Reduced by self-discharge\n\n2. Charging:\n\n   - Increased by charging power\n   - Reduced by charging efficiency losses\n\n3. Discharging:\n\n   - Decreased by discharging power\n   - Decreased by discharging efficiency losses\n:::\n\n# [Implementation Insights]{.flow} {.title}\n\n## Model Characteristics\n\n- Mixed-Integer Linear Programming (MILP) problem\n- Combines investment and operational decisions\n- Large-scale optimization problem\n- Requires efficient solution methods\n\n::: {.callout-note}\nThe model can be adapted to the specific use case, i.e. if a windpark already has a fixed capacity, the corresponding variable can be coverted to a parameter.\n:::\n\n## Key Considerations\n\n1. **Time Resolution**:\n   - Balance between accuracy and computational effort\n   - Consider representative periods\n   - Account for seasonal variations\n\n2. **Investment Costs**:\n   - Annualize investment costs using PVAF\n   - Consider component lifetimes\n   - Include maintenance costs\n\n3. **Operational Constraints**:\n   - Storage cycling limits\n   - Grid connection capacity\n   - Renewable generation profiles\n\n4. **Solution Methods**:\n   - Decomposition approaches\n   - Heuristic methods\n   - Commercial solvers\n\n# [Applications]{.flow} {.title}\n\n## Real-World Use Cases\n\n1. **Local Energy Systems**:\n   - Microgrids\n   - Industrial parks\n   - Residential communities\n\n2. **Grid Integration**:\n   - Renewable energy integration\n   - Grid capacity planning\n   - Ancillary services\n\n3. **Energy Markets**:\n   - Multi-market participation\n   - Price arbitrage\n   - Capacity markets\n\n## Extensions\n\n1. **Multi-Criteria Optimization**:\n   - Economic objectives\n   - Environmental impact\n   - System reliability\n\n2. **Uncertainty Handling**:\n   - Weather forecasts\n   - Price forecasts\n   - Demand forecasts\n\n3. **Advanced Features**:\n   - Battery degradation\n   - Multi-market participation\n   - Grid services\n\n::: {.callout-note}\nThe sizing problem provides a foundation for comprehensive energy system planning and optimization.\n:::\n\n\n::: {.loud-slide}\n::: {.r-fit-text}\nQuestions?\n:::\n\n::: footer\n:::\n\n# [Literature]{.flow} {.title}\n\n## Literature I\n\nFor more interesting literature to learn more about Julia, take a look at the [literature list](../general/literature.qmd) of this course.\n\n## Literature II\n\nFor a detailed mathematical formulation of the Unit Commitment problem, see @morales2013tight and @zimmermann2019increasing.\n\n",
    "supporting": [
      "lecture-design_files/figure-html"
    ],
    "filters": [],
    "includes": {}
  }
}