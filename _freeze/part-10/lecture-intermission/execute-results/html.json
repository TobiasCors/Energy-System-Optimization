{
  "hash": "463ff1f08162535d2bd9c73ae97d0d72",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Lecture X - Intermission: Exam Preparation\"\nsubtitle: \"Applied Optimization with Julia\"\nauthor: \"Dr. Tobias Vlćek\"\ninstitute: \"University of Hamburg - Fall 2024\"\ntitle-slide-attributes:\n    data-background-color: \"#025259\"\nhtml-math-method:\n  method: mathjax\n  url: \"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"\n\nformat:\n    revealjs:\n        theme: [default, ../styles.scss]\n        transition: slide\n        transition-speed: fast\n        highlight-style: arrow\n        slide-number: true\n        code-copy: true\n        code-link: true\n        preview-links: auto\n        footer: \" {{< meta title >}} | {{< meta author >}} | [Home](lecture-intermission.qmd)\"\n        output-file: lecture-presentation.html\n    html:\n        theme: [litera, ../styles.scss]\n    pdf: \n        documentclass: report\n        geometry:\n            - margin=1in\n        fontfamily: roboto\n        fontfamilyoptions: sfdefault\n        colorlinks: true\n\nbibliography: ../AppliedBib.bib\n\nexecute:\n    eval: false\n\n---\n\n\n\n\n\n\n\n\n# [Intermission]{.flow} {.title}\n\n## Today's lecture\n\n- Today's lecture is a **little bit different**\n- Manage your expectations\n- Give you a **better idea** of what to expect from the exam\n- We will go through **some examples together!**\n\n## Exam's structure\n\n- Exam consists of **three parts**\n- Free modelling, questions, Julia coding\n- Each point corresponds to [approximately 1 minute of work]{.highlight}\n\n. . .\n\n::: {.callout-important}\nYou can take a **handwritten** DIN A4 sheet of paper with you!\n:::\n\n## Exam Preparation Checklist\n\n::: {.callout-tip}\n## Before starting the exam:\n\n- [ ] Review modeling notation conventions\n- [ ] Practice writing sets, parameters, and variables\n- [ ] Review common constraint patterns\n- [ ] Practice Julia syntax\n- [ ] Prepare your DIN A4 cheat sheet\n:::\n\n# [Part I]{.flow} {.title}\n\n## 1.a (6 Points) {.scrollable}\n\nA company that ships ice cream wants to maximize their profit. It can do that by transporting its different sorts of ice cream from their only production facility to several supermarkets. \n\nEach delivered sort of ice cream makes the ice cream company a different profit per unit. The transportation costs per truckload are totally negligible as is the routing, as all supermarkets are located very close to each other. The company should maximally deliver the agreed number of units of each ice cream sort to each individual supermarket.\n\nTo do so, the company owns one truck which has a fixed total capacity for a number of units of ice cream. Note, that each unit of ice cream consumes a different amount of space in the truck! The required space for each unit of ice cream is given for each sort. The optimal number of units from each sort to ship to each supermarket should be computed by the model.\n\nDefine all sets, parameters and variables required to model the problem described above. Select a suitable notation of your choice. Make sure to explicitly state in your notation which elements are sets, parameters and variables.\n\n::: {.callout-tip}\nNote that the problem does not have to be modeled yet!\n:::\n\n::: {.content-visible when-profile=\"solutions\"}\n\n**Solution**\n\n- $i \\in \\mathcal{I}$ : Different sorts of ice cream (Set)\n- $j \\in \\mathcal{J}$ : Different supermarkets (Set)\n- $e_{i,j}$ : profit of each delivered sort $i$ to $j$ (Parameter)\n- $b_{i,j}$ : truckloads of sort $i$ demanded by $j$ (Parameter)\n- $u_i$ : capacity consumed by sort $i$ (Parameter)\n- $k$ : capacity per truck (Parameter)\n- $X_{i,j}$ : number of shipped truckloads from $i$ to $j$ (Variable)\n\n\\newpage\n:::\n\n::: {.content-visible unless-profile=\"solutions\"}\n\\vspace{0.1in}\n\n::: {#f5bc9304 .cell execution_count=1}\n``` {.julia .cell-code}\n# Your answer here\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n```\n:::\n\n\n\\newpage\n:::\n\n## 1.b (2 Points)  {.scrollable}\n\nPlease define the objective function to model the described problem based on your defined notation.\n\n::: {.callout-tip}\nIf you need additional sets, parameters or variables that are not yet defined, please define them as well.\n:::\n\n::: {.content-visible when-profile=\"solutions\"}\n\n**Solution**\n\n$$\n\\text{max} \\quad \\sum_{i \\in \\mathcal{I}}\\sum_{j \\in \\mathcal{J}} e_{i,j} \\times X_{i,j}\n$$\n\n\\newpage\n:::\n\n::: {.content-visible unless-profile=\"solutions\"}\n\\vspace{0.1in}\n\n::: {#0a1250bc .cell execution_count=2}\n``` {.julia .cell-code}\n# Your answer here\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n```\n:::\n\n\n\\newpage\n:::\n\n## 1.c (4 Points)  {.scrollable}\n\nPlease define all necessary constraints and the variable ranges to model the described problem based on your notation.\n\n::: {.callout-tip}\nIf you need additional sets, parameters or variables that are not yet defined, please define them as well.\n:::\n\n::: {.content-visible when-profile=\"solutions\"}\n\n**Solution**\n\n$$\n\\text{u.t.c} \\quad X_{i,j} \\leq b_{i,j} \\quad \\forall i \\in \\mathcal{I},j \\in \\mathcal{J}\n$$\n\n$$\n\\sum_{i \\in \\mathcal{I}}\\sum_{j \\in \\mathcal{J}} u_i \\times X_{i,j} \\leq k\n$$\n\n$$\nX_{i,j} \\geq 0 \\quad \\forall i \\in \\mathcal{I},j \\in \\mathcal{J}\n$$\n\n\\newpage\n:::\n\n::: {.content-visible unless-profile=\"solutions\"}\n\\vspace{0.1in}\n\n::: {#4606e805 .cell execution_count=3}\n``` {.julia .cell-code}\n# Your answer here\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n```\n:::\n\n\n\\newpage\n:::\n\n## 1.d (2 Points)  {.scrollable}\n\nIs the model formulation a linear problem with binary variables? \n\nPlease explain your answer briefly.\n\n::: {.content-visible when-profile=\"solutions\"}\n\n**Solution**\n\nYes, the model formulation is a linear problem but it does not have binary variables, but continuous variables.\n\\newpage\n:::\n\n::: {.content-visible unless-profile=\"solutions\"}\n\\vspace{0.1in}\n\n::: {#7d77b3aa .cell execution_count=4}\n``` {.julia .cell-code}\n# Your answer here\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n```\n:::\n\n\n\\newpage\n:::\n\n## 1.e (8 Points) {.scrollable}\n\nThe supermarkets are furious because the company doesn't always deliver the agreed truckloads of ice cream. Therefore, they want to penalize the company in the future, if it delivers less than the agreed amount. For each demand of a supermarket that could not be fulfilled, the company will have to pay a one-time fee for the ice-cream sort. \n\nHow can you expand your model to reflect this new situation? Write down all additional or modified sets, parameters, variables, constraints and the objective function while describing each with a few words.\n\n::: {.callout-tip}\nNote, that you only need to write down new and modified elements!\n:::\n\n::: {.content-visible when-profile=\"solutions\"}\n\n**Solution**\n\n- $p_i$ : One-time fee per unfulfilled demand (Parameter)\n- $Y_{i,j}$ : 1, if demand $b_{i,j}$ is unfulfilled (Variable)\n\n**New objective function**\n\n$$\n\\text{max} \\quad \\sum_{i \\in \\mathcal{I}}\\sum_{j \\in \\mathcal{J}} (e_{i,j} \\times X_{i,j} -  p_i \\times Y_{i,j})\n$$\n\n**New constraint**\n\n$$\nb_{i,j} - X_{i,j} \\leq Y_{i,j} \\times b_{i,j} \\quad \\forall i \\in \\mathcal{I},j \\in \\mathcal{J}\n$$\n\n\\newpage\n:::\n\n::: {.content-visible unless-profile=\"solutions\"}\n\\vspace{0.1in}\n\n::: {#bb1cd95c .cell execution_count=5}\n``` {.julia .cell-code}\n# Your answer here\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n```\n:::\n\n\n\\newpage\n:::\n\n## 1.f (8 Points) {.scrollable}\n\nNext to the production facility of the ice cream company sits a company that sells frozen fish. Due to declining fish stocks in the ocean, the company does not need all of its trucks. It offers to rent their trucks for a certain price to the ice cream company so it can transport more ice cream. These trucks have twice the capacity of the truck currently in use by the ice cream company.\n\nHow can you expand your model to reflect this new situation? Write down all additional or modified Sets, parameters, variables, constraints and the objective function while describing each with a few words. \n\n::: {.callout-tip}\nNote, that you only need to write down new and modified elements! If you haven't solved the previous task, work with the model defined before.\n:::\n\n::: {.content-visible when-profile=\"solutions\"}\n\n**Solution**\n\n- $r$ : Price for rented trucks (Parameter)\n- $Z$ : Number of rented trucks with Z as \\textbf{integer variable} (Variable)\n\n**New objective function**\n\n$$\n\\text{max} \\quad \\sum_{i \\in \\mathcal{I}}\\sum_{j \\in \\mathcal{J}} (e_{i,j} \\times X_{i,j} -  p_i \\times Y_{i,j}) - r \\times Z\n$$\n\n**New constraint**\n\n$$\n\\sum_{i \\in \\mathcal{I}}\\sum_{j \\in \\mathcal{J}} u_i \\times X_{i,j} \\leq k + 2k \\times Z\n$$\n\n\\newpage\n:::\n\n::: {.content-visible unless-profile=\"solutions\"}\n\\vspace{0.1in}\n\n::: {#db51daae .cell execution_count=6}\n``` {.julia .cell-code}\n# Your answer here\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n```\n:::\n\n\n\\newpage\n:::\n\n# [Part II]{.flow} {.title}\n\n## 2.a (3 Points)  {.scrollable}\n\nWhat is the goal of the Territory Design Problem (Districting Problem)? \n\nPlease answer in 2-3 sentences.\n\n::: {.content-visible when-profile=\"solutions\"}\n\n**Solution**\n\nThe goal of the Territory Design Problem (Districting Problem) is to aggregate smaller areas, often called basic areas, into clusters, called districts or territories, according to predefined goals. Those could for example  include:\n\n- Equal Workload: Territories should be designed to ensure that the workload (e.g., number of customers, sales potential, travel time) is distributed as evenly as possible across them. This promotes fairness and efficiency.\n- Contiguity: Territories should consist of basic units (e.g., neighborhoods, zip codes) that are connected without gaps or isolated sections. This is essential for many applications, like political districting or service area divisions.\n\n\\newpage\n:::\n\n::: {.content-visible unless-profile=\"solutions\"}\n\\vspace{0.1in}\n\n::: {#9d8a9c45 .cell execution_count=7}\n``` {.julia .cell-code}\n# Your answer here\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n```\n:::\n\n\n\\newpage\n:::\n\n\n## 2.b (3 Points) {.scrollable}\n\n::: {.columns}\n\n::: {.column width=\"50%\"}\n| $t_{mi}$ | A | B | C | D |\n|----------|---|---|---|---|\n| 1        | 0 | 0 | 1 | 1 |\n| 2        | 1 | 0 | 1 | 0 |\n| 3        | 1 | 0 | 0 | 1 |\n| 4        | 1 | 0 | 1 | 1 |\n| 5        | 1 | 1 | 0 | 1 |\n| 6        | 1 | 1 | 0 | 1 |\n:::\n\n::: {.column width=\"50%\"}\nPlease compute the coappearance matrix that results from these transactions.\n\n:::\n\n:::\n\n::: {.content-visible when-profile=\"solutions\"}\n\n**Solution**\n\n$\\begin{bmatrix}\n    5 & 2 & 2 & 4 \\\\\n    2 & 2 & 0 & 2 \\\\\n    2 & 0 & 2 & 2 \\\\\n    4 & 2 & 2 & 5 \n\\end{bmatrix}$\n\n\\newpage\n:::\n\n::: {.content-visible unless-profile=\"solutions\"}\n\\vspace{0.1in}\n\n::: {#0f7eccfa .cell execution_count=8}\n``` {.julia .cell-code}\n# Your answer here\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n```\n:::\n\n\n\\newpage\n:::\n\n## 2.c (2 Points)  {.scrollable}\n\nBriefly explain in 2-3 sentences what a global optimum in an optimization problem is.\n\n::: {.content-visible when-profile=\"solutions\"}\n\n**Solution**\n\nIn Operations Research (OR), a global optimum is the absolute best solution to an optimization problem. This solution has the most favorable objective function value (either the lowest cost or highest profit, depending on how the problem is defined) compared to any other possible solution within the entire feasible region. In contrast, a local optimum is only the best solution within a smaller neighborhood of solutions. If the problem is linear, the global optimum is the same as the local optimum.\n\n\\newpage\n:::\n\n::: {.content-visible unless-profile=\"solutions\"}\n\\vspace{0.1in}\n\n::: {#c98714b9 .cell execution_count=9}\n``` {.julia .cell-code}\n# Your answer here\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n```\n:::\n\n\n\\newpage\n:::\n\n## 2.d (3 Points)  {.scrollable}\n\nName three optimization problems, e.g. Knapsack Problem. \n\nYou are welcome to answer this question in bullet points.\n\n::: {.content-visible when-profile=\"solutions\"}\n\n**Solution**\n\n- Traveling Salesperson Problem (TSP):  Finding the shortest possible route that visits a set of cities and returns to the starting city. This has applications in logistics, route planning, and manufacturing.\n- Vehicle Routing Problem (VRP): Designing optimal routes for a fleet of vehicles to deliver goods or services to a set of customers. This problem considers constraints like vehicle capacities, time windows for delivery, and aims to minimize factors like total distance or cost.\n- Facility Location Problem: Determining the best locations to open facilities (e.g., warehouses, factories) to serve a set of customers while minimizing costs related to transportation and facility operation.\n\n\\newpage\n:::\n\n::: {.content-visible unless-profile=\"solutions\"}\n\\vspace{0.1in}\n\n::: {#36a2d56c .cell execution_count=10}\n``` {.julia .cell-code}\n# Your answer here\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n```\n:::\n\n\n\\newpage\n:::\n\n\n## 2.e (4 Points)  {.scrollable}\n\nExplain briefly in 2-3 sentences what so-called \"Big-M\" constraints can be used for in mathematical modeling.\n\n::: {.content-visible when-profile=\"solutions\"}\n\n**Solution**\n\nBig-M constraints are used in mathematical modeling to handle logical relationships, especially when working with binary variables (0 or 1).  By assigning a very large positive value (M) to one side of the constraint, it effectively forces the binary variable to \"turn on\" that constraint when needed and leave it inactive when not. This allows incorporating logical rules into mathematical models for optimization problems.\n\n\\newpage\n:::\n\n::: {.content-visible unless-profile=\"solutions\"}\n\\vspace{0.1in}\n\n::: {#31b67a61 .cell execution_count=11}\n``` {.julia .cell-code}\n# Your answer here\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n```\n:::\n\n\n\\newpage\n:::\n\n# [Part III]{.flow} {.title}\n\n## Hints\n\n::: {.callout-note}\n## Programming Tips\n\n- Pay attention to variable names and consistency\n- Check for proper package imports\n- Verify array indexing\n- Remember to use the correct comparison operators\n- Make sure to use proper JuMP syntax\n:::\n\n\\newpage\n\n## 3.a (7 Points) {.scrollable}\n\nThe following Julia code contains seven errors. Highlight the errors in the code and briefly describe what would need to be done to correct them.\n\n::: {.callout-note}\nAssume that all variables containing data are loaded correctly, e.g. availablePanels and requestedPanels are already defined.\n:::\n\n```julia\n# Load the necessary packages\nusing JuMP\nusing HiGHS\n\n# Define the size of the problem instance\nnrSuppliers = length(availablePanels)\nnrCustomers = length(requestedPanels)\n\n# Create model instance\ntransport = Model(HiGHS.Optimizer)\n\n# Define variable\n@variable(transport_model, X[i = nrSuppliers,j = 1:nrCustomers], Bin)\n\n# Define objective\n@objective(transport_model, Max, \n    sum(travelCosts[i,j]* X[i] for i in 1:nrSuppliers, j in 1:nrCustomers)\n    )\n# Define the constraints\n@constraint(transport_model, \n    restrictAvailable[i=1:nrSuppliers], \n    sum(X[i,j] for j in 1:nrCustomers) <= available[i]\n    )\n@constraint(transport_model,\n    restrictDemand[j=1:nrCustomers], \n    sum(X[i,j] for i in 1:nrSuppliers) === requested[j]\n    )\n# Start optimization\nstart_optimization(transport_model)\n```\n\n::: {.content-visible when-profile=\"solutions\"}\n\n**Solution**\n\n1. Model is called 'transport' instead of 'transportModel'\n2. 'i = nrSuppliers' should be replaced by 'i = 1:nrSuppliers'\n3. The variable should not be binary, but '.>= 0'\n4. We should minimize costs instead of maximizing them\n5. 'X[i]' is missing the 'j' dimension\n6. '===' should be replaced by '=='\n7. 'start\\_optimization' should be replaced by 'optimize!'\n\n\\newpage\n:::\n\n::: {.content-visible unless-profile=\"solutions\"}\n\\vspace{0.1in}\n\n::: {#1ee042bf .cell execution_count=12}\n``` {.julia .cell-code}\n# Your answer here\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n```\n:::\n\n\n\\newpage\n:::\n\n\n## 3.b (4 Points)  {.scrollable}\n\nIn an optimization model, the following equations are given:\n\n$$\n\\sum_{m\\in \\mathcal{M}} 7 * U_{gm} * T_m - \\sum_{k \\in \\mathcal{K}} R_k \\leq D_g \\quad \\forall g \\in \\mathcal{G}\n$$\n\nPlease **define the equations in correct Julia syntax**.\n\n::: {.callout-note}\nAssume that all required sets, variables, and parameters have already been defined.\n:::\n\n::: {.content-visible when-profile=\"solutions\"}\n\n**Solution**\n\n```julia\n@constraint(model, newConstraint[g in G], sum(U[g,m] * T[m] for m in M) - sum(R[k] for k in K) <= D[g]) \n```\n\n\\newpage\n:::\n\n::: {.content-visible unless-profile=\"solutions\"}\n\\vspace{0.1in}\n\n::: {#948674c5 .cell execution_count=13}\n``` {.julia .cell-code}\n# Your answer here\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n```\n:::\n\n\n\\newpage\n:::\n\n\n## 3.c (2 Points)  {.scrollable}\n\nFor an optimization model the following binary variable is supposed to be created:\n\n$X_{i,j}$ where $i \\in \\{1,2,...,10\\}$ and $j \\in \\{1,2,...,5\\}$. \n\nSpecify the definition of the variable in correct Julia syntax.\n\n::: {.content-visible when-profile=\"solutions\"}\n\n**Solution**\n\n```julia\n@variable(model, X[i=1:10,j=1:5], Bin)\n```\n\n\\newpage\n:::\n\n::: {.content-visible unless-profile=\"solutions\"}\n\\vspace{0.1in}\n\n::: {#81048b30 .cell execution_count=14}\n``` {.julia .cell-code}\n# Your answer here\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n```\n:::\n\n\n\\newpage\n:::\n\n\n## 3.d (2 Points)  {.scrollable}\n\nWhat is the difference between a linear and a nonlinear problem? Please describe the difference in a few sentences.\n\n::: {.content-visible when-profile=\"solutions\"}\n\n**Solution**\n\nA linear problem has both a linear objective function and linear constraints, meaning all variables appear only to the first power and are combined only through addition and subtraction. In contrast, a nonlinear problem contains at least one nonlinear element, such as quadratic terms (x²), products of variables (x₁×x₂), or other nonlinear functions (sin(x), e^x, etc.). Linear problems are generally easier to solve and guarantee global optimality, while nonlinear problems can be more complex and may have multiple local optima.\n\n\\newpage\n:::\n\n::: {.content-visible unless-profile=\"solutions\"}\n\\vspace{0.1in}\n\n::: {#6a410428 .cell execution_count=15}\n``` {.julia .cell-code}\n# Your answer here\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n```\n:::\n\n\n:::\n\n\n# [Wrap Up]{.flow} {.title}\n\n## Key Takeaways\n\n::: {.callout-important}\n## Remember\n\n- Time management is crucial\n- Read questions carefully\n- Describe your work clearly\n- Use your cheat sheet strategically\n- Double-check your answers if time permits\n:::\n\n## The end\n\n::: {.callout-note}\n## And that's it for todays lecture!\n\nWe now have covered the structure of the exam and you have a better idea of what to expect from the exam. In our upcoming tuorial, we will go through some additional examples and practice tasks.\n:::\n\n## {.loud-slide}\n::: {.r-fit-text}\nQuestions?\n:::\n\n::: footer\n:::\n\n# [Literature]{.flow} {.title}\n\n\n## Literature I\n\nFor more interesting literature to learn more about Julia, take a look at the [literature list](../general/literature.qmd) of this course.\n\n",
    "supporting": [
      "lecture-intermission_files"
    ],
    "filters": [],
    "includes": {}
  }
}